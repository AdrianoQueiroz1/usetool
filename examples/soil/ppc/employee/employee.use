model Employee

-------------
-- classes --
-------------

------------
class Person
  
  attributes
    name   : String
    age    : Integer
    salary : Real
  
  operations
    
	raiseSalary(rate : Real) : Real
	  begin
	    set self.salary := (self.salary * (1.0 + rate));
	    result := self.salary;
	  end

end
------------


-------------
class Company
  
  attributes
    name : String
    location : String

  operations
    
	hire(p : Person)
	  begin
	    insert (p, self) into WorksFor;
		set p.salary := 2000;
	  end
	
    fire(p : Person)
	  begin
	    delete (p, self) from WorksFor;
		set p.salary := 0;
      end

end
-------------


------------------
-- associations --

association WorksFor between
  Person[*] role employee
  Company[0..1] role employer
end


-----------
constraints
-----------

context Company::hire(p : Person)
  pre  hirePre1: p.isDefined()
  pre  hirePre2: employee->excludes(p)
  post hirePost: employee->includes(p)

context Company::fire(p : Person)
  pre  firePre:  employee->includes(p)
  post firePost: employee->excludes(p)
  
context Person::raiseSalary(rate : Real) : Real
  post raiseSalaryPost: salary = salary@pre * (1.0 + rate)
  post resultPost:      result = salary
