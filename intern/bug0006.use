model Drawings

class Drawing
attributes
    area:Real;
end

class BoxOnlyDrawing < Drawing
end

class DrawingElement
attributes
    area:Real;
    x_radius:Real;
    y_radius:Real;
end

class Circle < DrawingElement
attributes
    radius:Real;
end

class Rectangle < DrawingElement
attributes
    length:Real;
    width:Real;
end

association elements between
    Drawing [1] role drawing;
    DrawingElement [*] role elements;
end

constraints

context Drawing
inv define_area:
    self.area=self.elements->collect(e|e.area)->sum

context Rectangle
inv define_rectangle_area:
    self.area=width*length and self.length=self.x_radius*2.0 and self.width=self.y_radius*2.0

context Circle
inv define_circle_area:
    self.area=self.radius*self.radius*22/7 and self.radius=self.x_radius and self.x_radius=self.y_radius

context BoxOnlyDrawing
inv type_elements:
    self.elements->forAll(e|e.oclIsKindOf(Rectangle))
