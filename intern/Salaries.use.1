// -*- java -*- (we want emacs font locking)
// $ProjectHeader: use 0.393 Wed, 16 May 2007 14:10:28 +0200 opti $

model Salaries

// classes

class Company
attributes
  name : String;
queries
  // Returns the employee with the specified name. The result is
  // undefined when there is no such employee or there are more than
  // one employees having the same name.
  getEmployee(name : String) : Person = 
    employee->select(p | p.name = name)->singleton();
creation
  create(n : String) =
    name := n;
methods
  raiseSalaries(fromAge : Integer, toAge : Integer, value : Integer)
    calls raiseSalary(value) in 
      employee->select(p : Person | p.age >= fromAge and p.age <= toAge)
end

class Person
attributes
  name : String;
  age : Integer;
  salary : Integer;
creation
  create(n : String, a : Integer, s : Integer) =
    name := n, salary := s, age := a;
methods
  addEmployer(c : Company) = 
    employer := employer.including(c);  // add a link to company
  raiseSalary(value : Integer) = 
    age := age + value;
end

// associations

association WorksFor between
  Person[1..*] 
	role employee 
	qualifiers
	  name : String 	
	end;
  Company[0..*] role employer;
end

// script

script test1
p1 : Person := Person.create("a", 24, 2000);
p2 : Person := Person.create("b", 32, 2300);
p3 : Person := Person.create("c", 35, 2100);
p4 : Person := Person.create("d", 38, 2200);
p5 : Person := Person.create("e", 42, 2500);
c : Company := Company.create("Test inc.");
p1.addEmployer(c);
p2.addEmployer(c);
p3.addEmployer(c);
p4.addEmployer(c);
p5.addEmployer(c);
c.raiseSalaries(30, 40, 500);
end
